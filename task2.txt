Objects And Its Internal Representation In JavaScript.
      Objects, in JavaScript, is it’s most important data-type and forms the building blocks for modern JavaScript.
These objects are quite different from JavaScript’s primitive data-types(Number, String, Boolean, null, undefined and symbol) in the sense that while these primitive data-types all store a single value each (depending on their types).
Objects are more complex and each object may contain any combination of these primitive data-types as well as reference data-types.
An object, is a reference data type. Variables that are assigned a reference value are given a reference or a pointer to that value.
 That reference or pointer points to the location in memory where the object is stored. The variables don’t actually store the value.
 For example,
  let’s create an object named myCar and give it properties named make, model, and year as follows:
   var myCar = new Object();
   myCar.make = 'Ford';
   myCar.model = 'Mustang';
   myCar.year = 1969;
Unassigned properties of an object are undefined (and not null).
   myCar.color; // undefined

